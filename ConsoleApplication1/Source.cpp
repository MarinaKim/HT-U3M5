#include<stdio.h>
#include<math.h>
#include<iostream>
#include<stdint.h>
#include<time.h>

using namespace std;

void main()
{
	int n;
	setlocale(LC_ALL, "Russian");
	srand(time(NULL));
	do
	{
		cout << "введите номер задания:";
		cin >> n;
		switch (n) {

			//1.	Ввести два массива действительных чисел, состоящих из 9 и 7 элементов. 
			//Сформировать третий массив из упорядоченных по возрастанию значений обоих массивов
		case 1: {
			int m[9] = { 0 }, k[7] = { 0 }, i, j, l[16] = { 0 };

			cout << "Исходные массивы: " << endl;
			for (i = 0; i < 9; i++)
			{
				m[i] = -10 + rand() % 30;
				cout << m[i] << "\t";
			}
			cout << endl;

			for (i = 0; i < 7; i++)
			{
				k[i] = -10 + rand() % 30;
				cout << m[i] << "\t";
			}
			cout << endl;

			for (i = 0; i < 9; i++)
				l[i] = m[i];

			for (i = 9; i < 16; i++)
				l[i] = k[i];

			cout << "Совмещенный массив: " << endl;
			for (i = 0; i < 16; i++)
				cout << l[i] << "\t";
			cout << endl;


			for (i = 0; i < 16; i++)
			{
				for (j = 15; j >= 0; j--)
				{
					if (l[j - 1] > l[j])
					{
						int g = l[j - 1];
						l[j - 1] = l[j];
						l[j] = g;
					}
				}

			}

			cout << "После преобразования: " << endl;
			for (i = 0; i < 16; i++)
				cout << l[i] << endl;
		}break;


			//2.	В заданном целочисленном массиве R(9) определить индекс наибольшего из нечетных по значению положительных элементов
		case 2: {
			int m[9] = { 0 }, i, max, index;
			for (i = 0; i < 9; i++)
			{
				m[i] = -10 + rand() % 30;
				cout << m[i] << "\t";
			}
			cout << endl;
			max = m[0];
			for (i = 0; i < 9; i++)
			{
				if ((m[i] % 2 != 0) && (m[i] > 0) && (max < m[i]))
				{
					max = m[i];
					index = i;
				}
			}
			cout << " индекс наибольшего из нечетных по значению положительных элементов: " << index << endl;
		}break;


			//3.	Ввести массив, состоящий из 9 элементов (девять двузначных чисел) целого типа. Получить новый массив, состоящий из сумм цифр элементов исходного массива
		case 3: {
			int m[9] = { 0 }, i, k, k1, s;

			cout << "Исходный массив: " << endl;
			for (i = 0; i < 9; i++)
			{
				m[i] = 10 + rand() % 89;
				cout << m[i] << "\t";
			}
			cout << endl;

			cout << "После преобразования: " << endl;
			for (i = 0; i < 9; i++)
			{
				k = m[i] / 10;
				k1 = m[i] % 10;
				s = k + k1;
				m[i] = s;
				cout << m[i] << "\t";
			}
			cout << endl;

		}break;

			//4.	Даны действительные числа c1, c2, …, cn. Найти произведение суммы чисел с четными индексами и суммы чисел с нечетными индексами.
		case 4: {
			int m[10] = { 0 }, i, k = 0, k1 = 0, pr;
			for (i = 0; i < 10; i++)
			{
				m[i] = 0 + rand() % 30;
				cout << m[i] << "\t";
			}
			cout << endl;

			for (i = 0; i < 10; i++)
			{
				if (i % 2 == 0) k += m[i];
				else k1 += m[i];
			}
			pr = k*k1;
			cout << "произведение суммы чисел с четными индексами и суммы чисел с нечетными индексами: " << pr << endl;
		}break;


			//5.	Ввести массив, состоящий из 14 элементов действительного типа. 
			//Поменять местами первую половину со второй. Определить количество произведенных при этом перестановок.
		case 5: {
			int m[14] = { 0 }, i, k = 0;

			for (i = 0; i < 14; i++)
			{
				m[i] = 0 + rand() % 30;
				cout << m[i] << "\t";
			}
			cout << endl;

			for (i = 0; i < 7; i++)
			{
				int l = m[i];
				m[i] = m[i + 7];
				m[i + 7] = l;
				k++;
			}

			cout << "После преобразования: " << endl;
			for (i = 0; i < 14; i++)
				cout << m[i] << "\t";
			cout << endl;

			cout << "количество произведенных при этом перестановок: " << k << endl;

		}break;

			//6.	Определить количество локальных максимумов в заданном числовом массиве. (Локальный максимум в числовом массиве – это последовательность трех 
			//рядом стоящих чисел, в которой среднее число больше стоящих слева и справа от него).
		case 6: {
			int m[14] = { 0 }, i, k = 0;

			for (i = 0; i < 14; i++)
			{
				m[i] = 0 + rand() % 30;
				cout << m[i] << "\t";
			}
			cout << endl;

			for (i = 1; i < 13; i++)
			{
				if ((m[i] > m[i - 1]) && (m[i] > m[i + 1]))
				{
					k++;
				}
			}
			cout << "количество локальных максимумов в заданном числовом массиве: " << k << endl;

		}break;

			//7.	В заданном числовом массиве определить и вывести индексы последовательностей чисел, которые монотонно убывают (каждое следующее число меньше предыдущего).
		case 7: {
			int m[14] = { 0 }, i, index, index1;

			for (i = 0; i < 14; i++)
			{
				m[i] = 0 + rand() % 30;
				cout << m[i] << "\t";
			}
			cout << endl;

			cout << "индексы последовательностей чисел, которые монотонно убывают: " << endl;
			for (i = 1; i < 14; i++)
			{
				if (m[i] < m[i - 1])
				{
					index = i;
					index1 = i - 1;

					cout << index << "\t" << index1 << endl;
				}
			}
		}break;

			//8.	Ввести массив, состоящий из 10 элементов (десять двузначных чисел) целого типа.
			//Получить новый массив, состоящий из разностей цифр элементов исходного массива.
		case 8: {
			int m[10] = { 0 }, i, k, k1;

			cout << "Исходный массив: " << endl;
			for (i = 0; i < 10; i++)
			{
				m[i] = 10 + rand() % 89;
				cout << m[i] << "\t";
			}
			cout << endl;

			cout << "После преобразования: " << endl;
			for (i = 0; i < 10; i++)
			{
				k = m[i] / 10;
				k1 = m[i] % 10;
				m[i] = k - k1;
				cout << m[i] << "\t";
			}
			cout << endl;
		}break;

			//9.	Задан целочисленный массив. Определить количество участков массива, на котором элементы монотонно возрастают (каждое следующее число больше предыдущего)
		case 9: {
			int m[14] = { 0 }, i, k = 0;

			for (i = 0; i < 14; i++)
			{
				m[i] = 0 + rand() % 30;
				cout << m[i] << "\t";
			}
			cout << endl;

			for (i = 1; i < 14; i++)
			{
				if (m[i] > m[i - 1])
					k++;
			}
			cout << "количество участков массива, на котором элементы монотонно возрастают: " << k << endl;
		}break;

			//10.	Ввести два массива действительных чисел. Определить максимальные элементы в каждом массиве и поменять их местами.
		case 10: {
			int m[9] = { 0 }, k[9] = { 0 }, i, j, max, max1, index, index1;

			for (i = 0; i < 9; i++)
			{
				m[i] = -10 + rand() % 30;
				k[i] = -10 + rand() % 30;
				cout << m[i] << "\t" << k[i] << endl;
			}

			max = m[0];
			max1 = k[0];
			for (i = 0; i < 9; i++)
			{
				if (max < m[i])
				{
					max = m[i];
					index = i;
				}
			}
			for (j = 0; j < 9; j++)
			{
				if (max1 < k[j])
				{
					max1 = k[j];
					index1 = j;
				}
			}
			cout << "Максимальный элемент в первом массиве: " << max << "Индекс: " << index << endl;
			cout << "Максимальный элемент во втором массиве: " << max1 << "Индекс: " << index1 << endl;

			int l = m[index];
			m[index] = k[index1];
			k[index1] = l;
			for (i = 0; i < 9; i++)
			{
				cout << m[i] << "\t" << k[i] << endl;
			}
		}break;
		}
	} while (n > 0);
}